{"version":3,"sources":["Filter/NoteFiltered.js","Filter/Filter.js","Services/ApiCalls.js","Notes/Note.js","Notes/Notes.js","PersonForm.js","App.js","index.js"],"names":["NoteFiltered","person","name","number","Filter","handleFilter","handleOnChangeFilter","filterby","filtered","onSubmit","type","onChange","value","length","map","filter","title","baseUrl","Note","setUpdateList","onClick","window","confirm","id","personToDelete","Object","values","pers","console","log","newObject","axios","delete","then","response","data","deleteName","Notes","PersonForm","handleSubmit","handleOnChangeTitle","newName","newTitle","handleOnChangeBody","newNumber","newBody","App","useState","persons","setPerson","setNewName","setNewNumber","setNewFilter","setFiltered","updateList","useEffect","get","catch","error","alert","event","preventDefault","filteredTitles","toLowerCase","includes","target","missinIds","i","indexOf","push","personToAddToState","some","personToReplace","find","changedPerson","put","post","create","Array","from","document","querySelectorAll","forEach","input","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.50a3e92d.chunk.js","sourcesContent":["\r\nexport const NoteFiltered = ({ person }) => {\r\n    return (\r\n      <p>\r\n        {\" \"}\r\n          {person.name} {person.number}\r\n      </p>\r\n    );\r\n  };","import { NoteFiltered } from \"./NoteFiltered\";\r\n\r\nexport const Filter = ({ handleFilter, handleOnChangeFilter, filterby, filtered }) => {\r\n    return (\r\n      <div>\r\n        <form onSubmit={handleFilter}>\r\n          filter shown with:{\" \"}\r\n          <input type=\"text\" onChange={handleOnChangeFilter} value={filterby} />\r\n        </form>\r\n        {filterby.length <= 0\r\n          ? \" \"\r\n          : filtered.map((filter) => (\r\n              <NoteFiltered key={filter.title} person={filter} />\r\n            ))}\r\n      </div>\r\n    );\r\n  };","import axios from \"axios\";\r\n\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)  \r\n  return request.then(response => response.data)\r\n  .catch(error => {\r\n    alert(\r\n      `Data not found`\r\n    )})\r\n}\r\nconst create = newObject => {    \r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\nconst deleteName = (id, newObject) =>{\r\n  const request = axios.delete(`${baseUrl}/${id}`, newObject);  \r\n  return request\r\n  .then(response => response.data)\r\n}\r\nconst replace = (name, newObject) =>{\r\n  const request = axios.put(`${baseUrl}/${name}`, newObject);\r\n  return request.then(response => response.data);\r\n}\r\nconst update = (newObject) =>{\r\n  const request = axios.put(`${baseUrl}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\nexport {getAll,create, deleteName, replace, update}","import { deleteName } from \"../Services/ApiCalls\";\r\nexport const Note = ({ person, setUpdateList }) => {  \r\n  const deleteFromList = () =>{\r\n    if(window.confirm(`Delete ${person.name}?`)){\r\n      const id = person.id;\r\n      const personToDelete = Object.values(person).filter(pers => pers.id !== id);\r\n      console.log(personToDelete);    \r\n      deleteName(id,personToDelete)\r\n      .then(setUpdateList(true))}    \r\n  }\r\n    return (\r\n      <li>\r\n        <p>\r\n          <strong>{person.name}</strong> {person.number} <button \r\n          onClick={deleteFromList}>Delete</button>\r\n        </p>\r\n      </li>\r\n    );\r\n  };","import {Note} from './Note.js'\r\nexport const Notes = ({ person , setUpdateList }) => {\r\n    return (\r\n      <ul>\r\n        {person.map((person) => (\r\n          <Note key={person.name} person={person}  setUpdateList={setUpdateList } />\r\n        ))}\r\n      </ul>\r\n    );\r\n  };","export const PersonForm = ({\r\n    handleSubmit,\r\n    handleOnChangeTitle,\r\n    newTitle: newName,\r\n    handleOnChangeBody,\r\n    newBody: newNumber\r\n  }) => {\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          Name:{\" \"}\r\n          <input type=\"text\" onChange={handleOnChangeTitle} value={newName} />\r\n        </div>\r\n        <div>\r\n          Number:{\" \"}\r\n          <input type=\"text\" onChange={handleOnChangeBody} value={newNumber} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  };","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Filter } from \"./Filter/Filter\";\nimport { Notes } from \"./Notes/Notes\";\nimport { PersonForm } from \"./PersonForm\";\nimport { getAll,create, replace} from \"./Services/ApiCalls\"; \n\n\nconst App = () => {\n  const [persons, setPerson] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filterby, setNewFilter] = useState(\"\");\n  const [filtered, setFiltered] = useState([\"\"]);\n  const [updateList, setUpdateList] = useState(false);\n\n  useEffect(() => {\n    getAll()\n    .then(data =>{\n      setPerson([...data])      \n    })\n    .then(setUpdateList(false));\n  },[updateList]);\n\n  const handleOnChangeTitle = (event) => {\n    setNewName(event.target.value);\n  };\n  const handleReset = () => {\n    Array.from(document.querySelectorAll(\"input\")).forEach(\n      input => (input.value = \"\")\n    );\n  };\n  const handleOnChangeBody = (event) => {\n    setNewNumber(event.target.value);\n  };\n  const handleOnChangeFilter = (event) => {\n    setNewFilter(event.target.value);\n  };\n  const handleFilter = (event) => {\n    event.preventDefault();\n    const filteredTitles = persons.filter((person) =>\n      person.name.toLowerCase().includes(filterby.toLowerCase())\n    );\n    if (filteredTitles.length === 0) {\n      alert(\"Person not found\");\n      setFiltered([]);\n    } else {\n      setFiltered([...filteredTitles]);\n    }    \n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();   \n    const missinIds = []\n    for(var i= 1; i<=persons.length+1;i++){\n      if(persons.map(pers => pers.id).indexOf(i) === -1){\n        missinIds.push(i)\n      }\n    }   \n    const personToAddToState = {\n      id: missinIds[0],\n      name: newName,\n      number: newNumber\n    };\n    if (newName === \"\" || newNumber === \"\") {\n      alert(\"Fields can't be empty\");\n    } else if (persons.some(({ name }) => name === newName)) {\n     //const personToReplace = persons.filter(pers => pers.name === newName)\n     const personToReplace = persons.find(pers => pers.name === newName)\n      console.log(personToReplace)\n      if(window.confirm(`${personToReplace.name} is already added to phonebook, replace the old number with a new one?`)){\n        const changedPerson = {...personToReplace, number: personToAddToState.number}\n        console.log(changedPerson)\n        replace(personToReplace.id, changedPerson).then(setUpdateList(true))\n      }\n      //alert(newName + \" is already added to phonebook\");\n    } else {\n      setPerson([...persons,personToAddToState]);\n      console.log(personToAddToState);\n      create(personToAddToState);\n    }    \n    handleReset();\n  };\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter\n        handleFilter={handleFilter}\n        handleOnChangeFilter={handleOnChangeFilter}\n        filterby={filterby}\n        filtered={filtered}\n      />\n      <h3> add a new</h3>\n      <PersonForm\n        handleSubmit={handleSubmit}\n        handleOnChangeTitle={handleOnChangeTitle}\n        handleOnChangeBody={handleOnChangeBody}\n        newName={newName}\n        newNumber={newNumber}\n      />\n      <h3>Numbers</h3>\n      <Notes\n        person={persons}\n        setUpdateList={setUpdateList}\n      />\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}